{% extends '::base.html.twig' %}

{% block title %}{{ table.title }} | {{ parent() }}{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="http://code.highcharts.com/highcharts.js"></script>
    <script src="http://code.highcharts.com/modules/exporting.js"></script>
{% endblock %}

{% block body %}


        <ol class="breadcrumb">
            {{ parent() }}
            <li><a href="{{ path('userPage',{'id': table.experiment.user.id}) }}">Главная</a></li>
            <li><a href="{{ path('userExperiment',{'id': table.experiment.user.id, 'experimentId': table.experiment.id}) }}">{{ table.experiment.name }}</a></li>
            <li class="active">{{ table.title }}
                <a href="{{ path('editTableForm', {'id':table.id}) }}" class ="edit-pen" title="Редактировать"></a>
            </li>
        </ol>

        <div class="al-center">
            <p>{{ table.info }}</p>
        </div>

    {% set indexBench = 0 %}
        <table class="table table-hover table-bordered table-condensed">

            <tbody>
            {% for row in table.rows %}
                <script>
                    var arr{{ loop.index }} = [];
                    var first = true;
                </script>
                <tr>
                    {% for value in row.values %}
                        <td>{{ value.value }}</td>
                        <script>
                            if (first) {
                                first = false;
                            } else {
                                if ( {{ loop.parent.loop.index }} == {{ 1 }}) {
                                    arr{{ loop.parent.loop.index }}.push("{{ value.value }}");
                                    $('tr').addClass("firstRow");
                                } else {
                                    arr{{ loop.parent.loop.index }}.push({{ value.value }});
                                    {% set indexBench = loop.parent.loop.index %}
                                }
                            }
                        </script>
                    {% endfor %}

                </tr>

            {% endfor %}
            <tr class="warning" id="bench_tr"></tr>

            </tbody>

        </table><br>

    <button id="showColumnChart" type="button" class="btn btn-primary">Show Column chart</button>
    <button id="showCombinChart" type="button" class="btn btn-primary">Show Combination chart</button>
    <button id="showSplineChart" type="button" class="btn btn-primary">Show Spline chart</button>

    <div class="btn-group fl-right">
        <a class="btn btn-warning" href="#"><i class=""></i>compared with the benchmark</a>
        <a class="btn btn-warning dropdown-toggle" data-toggle="dropdown" href="#"><span class="caret"></span></a>
        <ul class="dropdown-menu">
            {% if benchmarkList is not empty %}

                {% for benchmark in benchmarkList %}

                    <li><a href="#" onclick="bench({{ benchmark.id }})"> {{ benchmark.name}}</a></li>

                {% endfor %}

            {% endif %}

        </ul>
    </div>

    <div id="charContainer"></div>


    <script>

        function bench(id) {
            $.ajax({
                url: '{{ path('getBench') }}',
                data: {id: id},
                type: 'POST',
                dataType: 'json',
                success: function(data){
                    data.forEach(function(item) {
                        var arr{{ indexBench +1 }} = [];
                        $('<td>' + item + '</td>').appendTo($('#bench_tr'));
                        arr{{ indexBench +1 }}.push(item);
                    });

                }
            })
        }

        $(function(){
            $("#showColumnChart").on("click", function(){
                $('#charContainer').highcharts({
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: ' '
                    },
                    subtitle: {
                    },
                    xAxis: {
                        categories: arr1 // 100 200 300 ... row[0] col[1..n]
                    },
                    yAxis: {
                        title: {
                            text: '{{ table.cellLabel }}'
                        }
                    },
                    credits: {
                        enabled: false
                    },
                    series: [
                        {% for row in table.rows[1:] %}
                        {
                            name: '{{ row.values|first.value }}', // row[1...n] col[0]
                            data: arr{{ loop.index+1 }}
                        },
                        {% endfor %}]
                });
            });
        });

        $(function(){
            $("#showCombinChart").on("click", function(){
                $('#charContainer').highcharts({
                    title: {
                        text: ' '
                    },
                    subtitle: {
                    },
                    xAxis: {
                        categories: arr1
                    },
                    yAxis: {
                        title: {
                            text: '{{ table.cellLabel }}'
                        }
                    },
                    credits: {
                        enabled: false
                    },
                    series: [
                        {% for row in table.rows[1:] %}
                        {   type: 'column',
                            name: '{{ row.values|first.value }}',
                            data: arr{{ loop.index+1 }}
                        },

                        {
                            type: 'spline',
                            name: 'MAX',
                            data: arr{{ loop.index+1 }},
                            marker: {
                                lineWidth: 2,
                                lineColor: Highcharts.getOptions().colors[3],
                                fillColor: 'white',
                                states: {
                                    select: true
                                }

                            }
                        },
                        {% endfor %}

                    ]
                });
            });
        });

        $(function(){
            $("#showSplineChart").on("click", function(){
                $('#charContainer').highcharts({
                    chart: {
                        type: 'spline',
                        marginRight: 120
                    },
                    title: {
                        text: ' '
                    },
                    subtitle: {
                    },
                    legend: {
                        align: 'right',
                        verticalAlign: 'top',
                        layout: 'vertical',
                        itemMarginBottom: 10,
                        x: 0,
                        y: 100
                    },
                    xAxis: {
                        categories: arr1
                    },
                    yAxis: {
                        title: {
                            text: '{{ table.cellLabel }}'
                        }
                    },
                    plotOptions: {
                        line: {
                            dataLabels: {
                                enabled: true
                            },
                            enableMouseTracking: false
                        }
                    },
                    series: [
                        {% for row in table.rows[1:] %}
                        {
                            name: '{{ row.values|first.value }}',
                            data: arr{{ loop.index+1 }}
                        },
                        {% endfor %}]
                });
            });
        });

//        ------------------------------------------------------------------------

//        var Arr1 = [];
//        var Arr = [];

//        function matrixArray(rows,columns){
//            var arr = new Array();
//            for(var i=0; i<columns; i++){
//                arr[i] = new Array();
//                for(var j=0; j<rows; j++){
//                    arr[i][j] = i+j+1;//вместо i+j+1 пишем любой наполнитель. В простейшем случае - null
//                }
//            }
//            return arr;
//        }
//
//        var myMatrix = matrixArray(3,3);



//        $('tr[class!="firstRow"]')
//        $('tr').filter("[class != firstRow]")




//        var Arr = [][];
//        var k = null;
//        $('document').find('tr').each(function() {
//
//            $(this).find('td').each(function(){
//
//            Arr[k][] = $(this).val();
//        });
//        k++;
//        });

//  ---------------------------------------------------------------------------------------

        {#$(function(){#}
            {#$("#showSplineChart").on("click", function(){#}

                {#var Arr2 = [];#}
                {#$('tr').each(function(){#}
                    {#$("td:nth-child(1) ~ *td").each(function(){#}
                        {#Arr2.push($(this).html());#}
                    {#});#}

                {#});#}
                {#alert( Arr2 );#}

                {#$('#charContainer').highcharts({#}
                    {#chart: {#}
                        {#type: 'spline',#}
                        {#marginRight: 120#}
                    {#},#}
                    {#title: {#}
                        {#text: ' '#}
                    {#},#}
                    {#subtitle: {#}
                    {#},#}
                    {#legend: {#}
                        {#align: 'right',#}
                        {#verticalAlign: 'top',#}
                        {#layout: 'vertical',#}
                        {#itemMarginBottom: 10,#}
                        {#x: 0,#}
                        {#y: 100#}
                    {#},#}
                    {#xAxis: {#}
                        {#categories: arr1#}
                    {#},#}
                    {#yAxis: {#}
                        {#title: {#}
                            {#text: '{{ table.cellLabel }}'#}
                        {#}#}
                    {#},#}
                    {#plotOptions: {#}
                        {#line: {#}
                            {#dataLabels: {#}
                                {#enabled: true#}
                            {#},#}
                            {#enableMouseTracking: false#}
                        {#}#}
                    {#},#}

                    {#series : [{#}
                        {#name :  "4656",#}
{#//                                (function () {#}
{#//                            var count = $('.def > td:first-child' ).size(), i;#}
{#//                            for (i = 1; i <= count; i++) {#}
{#//                                "$('tr td:first-child').val()"#}
{#//                            }#}
{#//#}
{#//                        }()),#}

                        {#data : "ff"#}
{#//                                (function () {#}
{#//#}
{#//                            var data = [];#}
{#//                            var count = $('tr:first > td').size(), i;#}
{#//#}
{#//                            for (i = 1; i <= count; i++) {#}
{#//                                    data.push([#}
{#//                                        $('tr td:nth-child(i) ~ *').val()#}
{#//#}
{#//                                    ]);#}
{#//                            }#}
{#//                            return data;#}
{#//                        }())#}
                    {#}]#}

                {#});#}
            {#});#}
        {#});#}

    </script>




{% endblock %}